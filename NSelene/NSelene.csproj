<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>11.0</LangVersion>
    <PackageId>NSelene</PackageId>
    <Version>1.0.0-alpha14</Version>
    <Authors>yashaka</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <Copyright>Copyright (c) 2015 Iakiv Kramarenko</Copyright>
    <RepositoryUrl>https://github.com/yashaka/NSelene</RepositoryUrl>
    <Title>NSelene - User-oriented Web UI browser tests in .NET (Selenide port from Java)</Title>
    <PackageTags>selenium;webdriver;wrapper;web;browser;test;automation;autotest;selenide;selene</PackageTags>
    <PackageDescription>
    NSelene is a wrapper over Selenium Webdriver, built to provide user-oriented API for Web UI tests in Browser and improve tests stability by implementing smart implicit waiting for commands and assertions. It's inspired by Selenide from Java, SelenideJs from JavaScript and Selene from Python.

    Main features:

    - User-oriented API for Selenium Webdriver (code like speak common English)
    - Dynamic/Ajax UI support (Smart implicit waiting and retry mechanism for commands and assertions)
    - PageObjects support (all elements are lazy-evaluated objects)

    Tests with NSelene can be built either in a simple straightforward "selenide' style or with PageObjects composed from Widgets i.e. reusable element components.
    </PackageDescription>
    
    <PackageReleaseNotes>
- add Configuration.LogOuterHtmlOnFailure (false by default)
  - to disable previously mandatory logging of outer html of elements in error messages
    that was the reason of failures when working with Appium
    </PackageReleaseNotes>

    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.TimeProvider" Version="8.0.1" />
    <PackageReference Include="Selenium.WebDriver" Version="4.*" />
  </ItemGroup>

</Project>
